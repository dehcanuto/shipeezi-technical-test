{"ast":null,"code":"var _jsxFileName = \"/Users/andrecanuto/Documents/Desenvolvimento/tests/shipeezi-technical-test/shipeezi-frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user_info');\n    const token = localStorage.getItem('access_token');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setIsAuthenticated(true);\n        setUser(parsedUser);\n      } catch (error) {\n        console.error(\"Erro ao fazer parse do JSON:\", error);\n        localStorage.removeItem('user_info');\n      }\n    }\n    setIsAuthenticated(!!token);\n  }, []);\n  const login = data => {\n    localStorage.setItem('user_info', JSON.stringify(data.user));\n    localStorage.setItem('access_token', data.access_token);\n    setUser(data.user);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Uq7KcTiOseX3k63CKoUNgtSkdNA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","storedUser","localStorage","getItem","token","parsedUser","JSON","parse","error","console","removeItem","login","data","setItem","stringify","access_token","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/andrecanuto/Documents/Desenvolvimento/tests/shipeezi-technical-test/shipeezi-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: User | null;\n  login: (data: any) => void;\n  logout: () => void;\n}\n\ninterface User {\n  fullName: string;\n  username: string;\n}\n\ninterface LoginResponse {\n  access_token: string;\n  user: User;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user_info');\n    const token = localStorage.getItem('access_token');\n\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setIsAuthenticated(true);\n        setUser(parsedUser);\n      } catch (error) {\n        console.error(\"Erro ao fazer parse do JSON:\", error);\n        localStorage.removeItem('user_info');\n      }\n    }\n    \n    setIsAuthenticated(!!token);\n  }, []);\n\n  const login = (data: LoginResponse) => {\n    localStorage.setItem('user_info', JSON.stringify(data.user));\n    localStorage.setItem('access_token', data.access_token);\n    setUser(data.user);\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAMzE,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAElD,IAAIF,UAAU,EAAE;MACd,IAAI;QACF,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;QACzCD,kBAAkB,CAAC,IAAI,CAAC;QACxBF,OAAO,CAACO,UAAU,CAAC;MACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDN,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;MACtC;IACF;IAEAV,kBAAkB,CAAC,CAAC,CAACI,KAAK,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAIC,IAAmB,IAAK;IACrCV,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEP,IAAI,CAACQ,SAAS,CAACF,IAAI,CAACf,IAAI,CAAC,CAAC;IAC5DK,YAAY,CAACW,OAAO,CAAC,cAAc,EAAED,IAAI,CAACG,YAAY,CAAC;IACvDjB,OAAO,CAACc,IAAI,CAACf,IAAI,CAAC;IAClBG,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMgB,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;IACvCV,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,eAAe;MAAEF,IAAI;MAAEc,KAAK;MAAEK;IAAO,CAAE;IAAArB,QAAA,EACnEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CAvCWF,YAAyC;AAAA6B,EAAA,GAAzC7B,YAAyC;AAyCtD,OAAO,MAAM8B,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAGvC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACkC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}