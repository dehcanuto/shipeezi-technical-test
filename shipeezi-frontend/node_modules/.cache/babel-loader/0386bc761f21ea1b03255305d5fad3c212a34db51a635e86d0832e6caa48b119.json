{"ast":null,"code":"import api from './api';\nexport const handleLogin = async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    if (response.data.token) localStorage.setItem('token', response.data.token);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n};\nexport const handleRegister = async data => {\n  try {\n    const response = await api.post('/auth/register', data);\n    console.log('handleRegister', response);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n};\nexport const isAuthenticated = () => !!localStorage.getItem('token');\nexport const getToken = () => localStorage.getItem('token');","map":{"version":3,"names":["api","handleLogin","email","password","response","post","data","token","localStorage","setItem","error","console","handleRegister","log","isAuthenticated","getItem","getToken"],"sources":["/Users/andrecanuto/Documents/Desenvolvimento/tests/shipeezi-technical-test/shipeezi-frontend/src/services/auth.tsx"],"sourcesContent":["import api from './api';\n\nimport { LoginCredentials } from '../models/auth';\nimport { UserInfos } from '../models/user';\n\nexport const handleLogin = async ({ email, password }: LoginCredentials) => {\n  try {\n    const response = await api.post('/auth/login', { email, password });\n    if (response.data.token) localStorage.setItem('token', response.data.token);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n};\n\nexport const handleRegister = async (data: UserInfos) => {\n  try {\n    const response = await api.post('/auth/register', data);\n    console.log('handleRegister', response);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n};\n\nexport const isAuthenticated = () => !!localStorage.getItem('token');\n\nexport const getToken = () => localStorage.getItem('token');"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAKvB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAA2B,CAAC,KAAK;EAC1E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IAC3E,OAAOH,QAAQ;EACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAON,IAAe,IAAK;EACvD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,gBAAgB,EAAEC,IAAI,CAAC;IACvDK,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAET,QAAQ,CAAC;IACvC,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMI,eAAe,GAAGA,CAAA,KAAM,CAAC,CAACN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;AAEpE,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMR,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}