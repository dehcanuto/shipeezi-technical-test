{"ast":null,"code":"import api from './api';\nexport const handleLogin = async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await api.get('/auth/login');\n    console.log('response', response);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n\n  // try {\n  //   const response = await api.post('/auth/login', { email, password });\n  //   if (response.data.token) localStorage.setItem('token', response.data.token);\n  //   return response;\n  // } catch (error) {\n  //   console.error(\"Erro de autenticação\", error);\n  //   return null;\n  // }\n};\nexport const handleRegister = async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await api.post('/auth/register', {\n      email,\n      password\n    });\n    if (response.data.token) localStorage.setItem('token', response.data.token);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n};\nexport const isAuthenticated = () => !!localStorage.getItem('token');\nexport const getToken = () => localStorage.getItem('token');","map":{"version":3,"names":["api","handleLogin","email","password","response","get","console","log","error","handleRegister","post","data","token","localStorage","setItem","isAuthenticated","getItem","getToken"],"sources":["/Users/andrecanuto/Documents/Desenvolvimento/tests/shipeezi-technical-test/shipeezi-frontend/src/services/auth.tsx"],"sourcesContent":["import api from './api';\nimport { LoginCredentials } from '../models/auth';\n\nexport const handleLogin = async ({ email, password }: LoginCredentials) => {\n  try {\n    const response = await api.get('/auth/login');\n    console.log('response', response);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n\n  // try {\n  //   const response = await api.post('/auth/login', { email, password });\n  //   if (response.data.token) localStorage.setItem('token', response.data.token);\n  //   return response;\n  // } catch (error) {\n  //   console.error(\"Erro de autenticação\", error);\n  //   return null;\n  // }\n};\n\nexport const handleRegister = async ({ email, password }: LoginCredentials) => {\n  try {\n    const response = await api.post('/auth/register', { email, password });\n    if (response.data.token) localStorage.setItem('token', response.data.token);\n    return response;\n  } catch (error) {\n    console.error(\"Erro de autenticação\", error);\n    return null;\n  }\n};\n\nexport const isAuthenticated = () => !!localStorage.getItem('token');\n\nexport const getToken = () => localStorage.getItem('token');"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAA2B,CAAC,KAAK;EAC1E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAa,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;IACjC,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAO;EAAEP,KAAK;EAAEC;AAA2B,CAAC,KAAK;EAC7E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACU,IAAI,CAAC,gBAAgB,EAAE;MAAER,KAAK;MAAEC;IAAS,CAAC,CAAC;IACtE,IAAIC,QAAQ,CAACO,IAAI,CAACC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,QAAQ,CAACO,IAAI,CAACC,KAAK,CAAC;IAC3E,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMO,eAAe,GAAGA,CAAA,KAAM,CAAC,CAACF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;AAEpE,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMJ,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}