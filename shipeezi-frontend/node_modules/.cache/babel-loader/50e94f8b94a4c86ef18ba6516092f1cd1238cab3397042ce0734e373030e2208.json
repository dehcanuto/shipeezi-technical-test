{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from './auth';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/' // process.env.APP_API_URL,\n});\napi.interceptors.request.use(async config => {\n  const sessionToken = getToken();\n  if (sessionToken) config.headers.Authorization = `Bearer ${sessionToken}`;\n  return config;\n}, error => {\n  Promise.reject(error);\n  console.log('error api', error);\n  return error.data.message;\n});\nexport default api;","map":{"version":3,"names":["axios","getToken","api","create","baseURL","interceptors","request","use","config","sessionToken","headers","Authorization","error","Promise","reject","console","log","data","message"],"sources":["/Users/andrecanuto/Documents/Desenvolvimento/tests/shipeezi-technical-test/shipeezi-frontend/src/services/api.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { getToken } from './auth';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/' // process.env.APP_API_URL,\n});\n\napi.interceptors.request.use(\n  async (config) => {\n    const sessionToken = getToken();\n    if (sessionToken) config.headers!.Authorization =  `Bearer ${sessionToken}`\n    return config\n  },\n  (error) => {\n    Promise.reject(error)\n    console.log('error api', error)\n    return error.data.message\n  }\n)\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,QAAQ;AAEjC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,wBAAwB,CAAC;AACpC,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1B,MAAOC,MAAM,IAAK;EAChB,MAAMC,YAAY,GAAGR,QAAQ,CAAC,CAAC;EAC/B,IAAIQ,YAAY,EAAED,MAAM,CAACE,OAAO,CAAEC,aAAa,GAAI,UAAUF,YAAY,EAAE;EAC3E,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACTC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EACrBG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,KAAK,CAAC;EAC/B,OAAOA,KAAK,CAACK,IAAI,CAACC,OAAO;AAC3B,CACF,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}